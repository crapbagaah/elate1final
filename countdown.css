@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@1,300;1,400&display=swap');


*{
    margin: 0;
    padding: 0;
    font-family: 'Poppins', sans-serif;
    box-sizing:border-box;
}

body{
    background: #E4D8DB;
    color: #000000;
}


*{
    margin: 0;
    padding: 0;
    font-family: 'Poppins', sans-serif;
    box-sizing:border-box;
}

#header{
    width: 100%;
    background-size: cover;
    background-position: center;
}

/*.container{
    padding: 10px 10%;

}*/

nav{
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
    background-color: #2A0060;
}

nav ul li{
    display: inline-block;
    list-style: none;
    margin: 10px 20px;
}

nav ul li a{
    color: #ffffff;
    font-weight: bolder;
    text-decoration: none;
    font-size: 16px;
    position: relative;
}

nav ul li a::after{
    content: '';
    width: 0;
    height: 3px;
    background: #aa85ff ;
    position: absolute;
    left: 0;
    bottom: -6px;
    transition: 0.5s;
}

nav ul li a:hover::after{
    width: 50%;
}

/bjjjjn/

#services{
    padding: 10px;
    color: #5c5c5c;
}

.services-list{
    display:grid;
    grid-template-columns: repeat(auto-fit,minmax(250px, 1fr));
    grid-gap: 40px;
    margin-top: 10%;
}

.services-list div{
    background: #262626;
    padding: 40px;
    font-size: 13px;
    font-weight: 300;
    border-radius: 10px;
    transition: background 0.5s, transform 0.5s ;
}

.services-list div i{
    font-size: 50px;
    margin-bottom: 30px;
}

.services-list div h3{
    font-size: 30px;
    font-weight: 500;
    margin-bottom: 15px;
}

.services-list div a{
    text-decoration: none;
    color: #fff;
    font-size: 12px;
    margin-top: 20px;
    display: inline-block;
}

.services-list div:hover{
    background: #2A0060;
    transform: translateY(-10px)
}


@property --t {
  syntax: "<number>";
  initial-value: 20;
  inherits: true;
}
/* won't be needed once Chrome supports round() */
@property --s {
  syntax: "<integer>";
  initial-value: 0;
  inherits: true;
}
.countdown {
  /* when Chrome supports round(), this can be simplified */
  /* more on this rounding trick
   * https://css-tricks.com/using-absolute-value-sign-rounding-and-modulo-in-css-today/ */
  --s: calc(var(--t)/1);
  display: grid;
  margin: 1em auto;
  width: 20em;
  height: 20em;
  animation: t 20s linear infinite;
}
.countdown::after {
  grid-column: 1;
  grid-row: 1;
  place-self: center;
  font: 5em/2 ubuntu mono, consolas, monaco, monospace;
  counter-reset: s var(--s);
  content: "0:" counter(s, decimal-leading-zero);
}

@keyframes t {
  to {
    --t: 0 ;
  }
}
svg {
  grid-column: 1;
  grid-row: 1;
}

[r] {
  fill: none;
  stroke: silver;
}
[r] + [r] {
  --k: calc(var(--t)/20);
  transform: rotate(-90deg);
  stroke-linecap: round;
  stroke: color-mix(in hsl shorter hue, #8a9b0f calc(var(--k)*100%), #940a3d);
  stroke-dasharray: var(--k) 1;
}


#timer {
    width: 200px;
    height: 200px;
    border: 10px solid #ccc;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 48px;
    font-weight: bold;
    text-align: center;
    background-color: #fff;
    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
}

#controls {
    margin-top: 20px;
    text-align: left;
    margin: 20px;

}

#startBtn, #stopBtn {
    

    padding: 10px 20px;
    font-size: 20px;
    border: 10px black;

    border-radius: 4px;
    background-color:black ;
    color: white;
    cursor: pointer;
    transition: background-color 0.3s;

}

#startBtn:hover, #stopBtn:hover {
    background-color: #2A0060;
    color: white;
}

.button{
    color: black;

}
.breathein{
    margin-left: 10rem;
    
}
.containerclock{
    display: inline-flex;
    gap: 30rem;
}



